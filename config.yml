# MikroTik Multi-Router DDoS Monitor Configuration
# All settings can be overridden via environment variables

# Database Settings
database:
  path: "mt_ddos.db"             # SQLite database file path
  retention_days: 30             # Keep events/metrics for this many days

# MikroTik Router Configuration
mikrotik:
  host: "103.7.4.18"             # Router IP address
  port: 8728                     # RouterOS API port
  username: "ddos"               # RouterOS username
  password: "monitor"            # RouterOS password

# API Settings
api:
  host: "0.0.0.0"
  port: 5000
  key: "changeme"                # API key for authentication

# Default Router Configuration (applied to new routers)
router_defaults:
  poll_interval: 30              # Monitoring interval in seconds
  conn_attack_threshold: 10000   # Connection count threshold
  new_conn_rate_threshold: 1000  # New connections per minute threshold
  per_src_new_conn_limit: 100    # Per-source new connection limit
  per_src_window: 60             # Sliding window in seconds
  tighten_cooldown: 300          # Cooldown between tighten actions
  tighten_limits: "{}"           # JSON string of tightened limits
  restore_limits: "{}"           # JSON string of normal limits
  notification_prefs: "{}"       # JSON string of notification preferences

# Notification Settings
notifications:
  telegram:
    enabled: false
    token: ""
    chat_id: ""
  email:
    enabled: false
    smtp_server: ""
    smtp_port: 587
    smtp_user: ""
    smtp_password: ""
    alert_email: ""
  webhook:
    enabled: false
    url: ""

# Logging
logging:
  level: "INFO"
  file: "mt_ddos_manager.log"

# Background Tasks
tasks:
  cleanup_interval: 86400        # Cleanup old data daily
  backup_interval: 86400         # Backup database daily

# API Settings
api:
  enabled: true                  # Enable REST API
  host: "0.0.0.0"               # API bind address
  port: 5000                     # API port
  key: "changeme"                # API authentication key (use environment variable in production)
  cors_enabled: true             # Enable CORS for web frontend
  rate_limit: 100                # Requests per minute per IP

# Notification Settings
notifications:
  enabled: true
  
  # Email notifications
  email:
    enabled: false
    smtp_host: "smtp.gmail.com"
    smtp_port: 587
    smtp_user: "your-email@gmail.com"
    smtp_password: "your-password"
    from_address: "ddos-monitor@example.com"
    to_addresses:
      - "admin@example.com"
    # Send email for these severity levels
    severity_threshold: "HIGH"   # LOW, MEDIUM, HIGH, CRITICAL
  
  # Webhook notifications
  webhook:
    enabled: false
    url: "https://hooks.example.com/webhook"
    method: "POST"
    headers:
      Content-Type: "application/json"
    severity_threshold: "HIGH"
  
  # Telegram notifications
  telegram:
    enabled: false
    bot_token: "your-bot-token"
    chat_id: "your-chat-id"
    severity_threshold: "HIGH"

# Logging Settings
logging:
  level: "INFO"                  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  file: "mt_ddos_monitor.log"   # Log file path
  max_size_mb: 100               # Maximum log file size
  backup_count: 5                # Number of backup log files to keep
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Advanced Settings
advanced:
  # Maximum concurrent connections to monitor
  max_connections: 100000
  
  # Memory limit for event buffer (MB)
  event_buffer_mb: 50
  
  # Enable performance profiling
  profiling_enabled: false
  
  # RouterOS API timeout (seconds)
  api_timeout: 10
  
  # Retry connection on failure
  retry_on_failure: true
  retry_interval: 60             # Seconds between retries
  max_retries: 5                 # Maximum number of retries (-1 for infinite)
